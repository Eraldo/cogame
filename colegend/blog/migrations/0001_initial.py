# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-06-25 12:38
from __future__ import unicode_literals

import colegend.cms.blocks
import colegend.cms.models
import datetime
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.wagtailcore.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0013_make_rendition_upload_callable'),
        ('wagtailcore', '0028_merge'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'verbose_name': 'Blog',
            },
            bases=(colegend.cms.models.UniquePageMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='BlogPostPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('lead', models.TextField(blank=True, verbose_name='Lead text')),
                ('content', wagtail.wagtailcore.fields.StreamField((('heading', colegend.cms.blocks.HeadingBlock()), ('rich_text', colegend.cms.blocks.RichTextBlock()), ('image', colegend.cms.blocks.ImageBlock()), ('embed', colegend.cms.blocks.EmbedBlock())), blank=True)),
                ('date', models.DateField(default=datetime.date(2016, 6, 25), help_text='This date may be displayed on the blog post. It is not used to schedule posts to go live at a later date.', verbose_name='Display date')),
                ('color', models.CharField(blank=True, choices=[('#f72e74', 'pink'), ('#FFAB40', 'orange'), ('#eede39', 'yellow'), ('#a8e141', 'green'), ('#6bdaed', 'cyan'), ('#3197d6', 'blue'), ('#ad86fc', 'purple'), ('#455A64', 'dark')], max_length=80, verbose_name='Color')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='Image')),
            ],
            options={
                'verbose_name_plural': 'Blog posts',
                'verbose_name': 'Blog post',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name_plural': 'Tags',
                'verbose_name': 'Tag',
            },
        ),
        migrations.CreateModel(
            name='TaggedBlogPostPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='blog.BlogPostPage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_taggedblogpostpage_items', to='blog.BlogTag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='blogpostpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='blog.TaggedBlogPostPage', to='blog.BlogTag', verbose_name='Tags'),
        ),
    ]
