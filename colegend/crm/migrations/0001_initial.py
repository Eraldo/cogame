# Generated by Django 2.0.4 on 2018-07-24 14:33

import colegend.core.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='International format: e.g "+4917612345678"', max_length=128, verbose_name='phone')),
                ('url', models.URLField(blank=True, max_length=1000, verbose_name='url')),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, verbose_name='country')),
                ('address', models.TextField(blank=True, verbose_name='address')),
                ('gender', models.CharField(choices=[('M', 'male'), ('F', 'female'), ('N', 'neutral')], default='N', max_length=1, verbose_name='gender')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='birthday')),
                ('notes', colegend.core.fields.MarkdownField(verbose_name='notes')),
                ('first_contact', models.DateField(blank=True, help_text='When was this lead first contacted?', null=True, verbose_name='first contact')),
                ('last_contact', models.DateField(blank=True, help_text='When was this lead last contacted?', null=True, verbose_name='last contact')),
                ('next_contact', models.DateField(blank=True, help_text='When will this lead be contacted next?', null=True, verbose_name='next contact')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Lead',
                'verbose_name_plural': 'Leads',
                'ordering': ['created'],
                'default_related_name': 'leads',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'Status',
                'verbose_name_plural': 'Statuses',
                'ordering': ('order',),
                'abstract': False,
                'default_related_name': 'statuses',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
                'default_related_name': 'tags',
            },
        ),
        migrations.AddField(
            model_name='lead',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='leads', to='crm.Status'),
        ),
        migrations.AddField(
            model_name='lead',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='leads', to='crm.Tag'),
        ),
    ]
